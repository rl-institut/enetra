# Generated by Django 5.2.4 on 2025-07-28 15:09

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import django.db.models.functions.datetime
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_default=django.db.models.functions.datetime.Now())),
                ('manager', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('internal_id', models.IntegerField()),
                ('geom', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ports.scenario')),
            ],
            options={
                'ordering': ['scenario', 'internal_id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('internal_id', models.IntegerField()),
                ('settings', models.JSONField(default=dict)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ports.scenario')),
            ],
            options={
                'ordering': ['scenario', 'internal_id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Solar',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('internal_id', models.IntegerField()),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ports.area')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ports.scenario')),
            ],
            options={
                'ordering': ['scenario', 'internal_id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('internal_id', models.IntegerField()),
                ('name', models.TextField(null=True)),
                ('file', models.FileField(upload_to='uploads/')),
                ('object_id', models.UUIDField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ports.scenario')),
            ],
            options={
                'ordering': ['scenario', 'internal_id'],
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='area',
            constraint=models.UniqueConstraint(fields=('internal_id', 'scenario'), name='area_unique_internal_id_per_scenario'),
        ),
        migrations.AddConstraint(
            model_name='settings',
            constraint=models.UniqueConstraint(fields=('internal_id', 'scenario'), name='settings_unique_internal_id_per_scenario'),
        ),
        migrations.AddConstraint(
            model_name='solar',
            constraint=models.UniqueConstraint(fields=('internal_id', 'scenario'), name='solar_unique_internal_id_per_scenario'),
        ),
        migrations.AddConstraint(
            model_name='uploadedfile',
            constraint=models.UniqueConstraint(fields=('internal_id', 'scenario'), name='uploadedfile_unique_internal_id_per_scenario'),
        ),
    ]
